[{"E:\\Projects\\Django\\invento\\image_upload_react\\src\\index.js":"1","E:\\Projects\\Django\\invento\\image_upload_react\\src\\App.js":"2","E:\\Projects\\Django\\invento\\image_upload_react\\src\\components\\Home.js":"3","E:\\Projects\\Django\\invento\\image_upload_react\\src\\components\\ImageList.js":"4","E:\\Projects\\Django\\invento\\image_upload_react\\src\\components\\Title.js":"5","E:\\Projects\\Django\\invento\\image_upload_react\\src\\components\\Endpoints.js":"6","E:\\Projects\\Django\\Invento-task\\src\\index.js":"7","E:\\Projects\\Django\\Invento-task\\src\\App.js":"8","E:\\Projects\\Django\\Invento-task\\src\\components\\ImageList.js":"9","E:\\Projects\\Django\\Invento-task\\src\\components\\Home.js":"10","E:\\Projects\\Django\\Invento-task\\src\\components\\Endpoints.js":"11","E:\\Projects\\Django\\Invento-task\\src\\components\\Title.js":"12"},{"size":235,"mtime":1610102742060,"results":"13","hashOfConfig":"14"},{"size":418,"mtime":1610108832406,"results":"15","hashOfConfig":"14"},{"size":2541,"mtime":1610108651984,"results":"16","hashOfConfig":"14"},{"size":1436,"mtime":1610101828728,"results":"17","hashOfConfig":"14"},{"size":549,"mtime":1610083590281,"results":"18","hashOfConfig":"14"},{"size":282,"mtime":1610107928375,"results":"19","hashOfConfig":"14"},{"size":235,"mtime":1610102742060,"results":"20","hashOfConfig":"21"},{"size":419,"mtime":1610108879159,"results":"22","hashOfConfig":"21"},{"size":1491,"mtime":1610112233776,"results":"23","hashOfConfig":"21"},{"size":2695,"mtime":1610112074910,"results":"24","hashOfConfig":"21"},{"size":282,"mtime":1610107928375,"results":"25","hashOfConfig":"21"},{"size":549,"mtime":1610083590281,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1pywa93",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3ncjdh",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Projects\\Django\\invento\\image_upload_react\\src\\index.js",[],["55","56"],"E:\\Projects\\Django\\invento\\image_upload_react\\src\\App.js",[],"E:\\Projects\\Django\\invento\\image_upload_react\\src\\components\\Home.js",["57"],"import React, { useState, useEffect } from \"react\";\r\nimport Title from \"./Title\";\r\nimport {imageUplaodApi, fetchImageTitleApi} from '../components/Endpoints';\r\n\r\nexport default function Home() {\r\n  const [images, setImages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  // uploadKey is used to reset the form values after successful uplaod\r\n  const [state, setState] = useState({\r\n    title: \"\",\r\n    files: [],\r\n    uploadKey: Math.random().toString()\r\n  });\r\n\r\n  const fetchImages = () => {\r\n    fetch(fetchImageTitleApi)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setImages(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n      setState({...state, title: \"\" , uploadKey: Math.random().toString()});\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImages();\r\n  }, []);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    let data = new FormData();\r\n    for (let file of state.files) {\r\n      data.append(\"file\", file);\r\n    }\r\n    data.append(\"title\", state.title);\r\n    fetch(imageUplaodApi, {\r\n      method: \"POST\",\r\n      body: data\r\n    })\r\n    .then(response => {\r\n      return response.json();\r\n    })\r\n    .then(data => {\r\n      fetchImages();\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  };\r\n  return (\r\n    <>\r\n    <div className=\"container\">\r\n    <div className=\"row justify-content-center mt-3\">\r\n    <form className=\"col-md-8\" method=\"POST\" encType=\"multipart/form-data\" onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={state.title}\r\n            placeholder=\"Enter Title\"\r\n            onChange={(event) => setState({ ...state, title: event.target.value })}\r\n            required={true}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"file\"\r\n            name=\"files\"\r\n            key={state.uploadKey}\r\n            onChange={(event) => setState({ ...state, files: event.target.files })}\r\n            multiple={true}\r\n            required={true}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n    \r\n    {/* Title List */}\r\n      {loading ? <div>Loading</div> : <Title data={images} />}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","E:\\Projects\\Django\\invento\\image_upload_react\\src\\components\\ImageList.js",["58"],"import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {getImageListsApi} from '../components/Endpoints';\r\n\r\nfunction ImageList({match}) {\r\n    const [images, setImages] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const fetchImages = () => {\r\n        fetch(`${getImageListsApi}${match.params['pk']}/`)\r\n        .then(response=> {\r\n            return response.json();\r\n        })\r\n        .then(data=> {\r\n            setImages(data);\r\n            setLoading(false);\r\n        })\r\n    }\r\n\r\n    useEffect(()=> {\r\n        fetchImages();\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n        {loading?<div>Loading......</div>\r\n        :\r\n        <div>\r\n            <h3 className=\"my-4 text-center\">Title {images[0].title}</h3>\r\n            {\r\n                images.map(image=>\r\n                    <div className=\"d-flex flex-column align-items-center\" key={image.id}>\r\n                        <a href={image.image_url}>\r\n                        <img className=\"img-fluid\" style={{width: \"320px\", height: \"320px\"}} src={image.image_url} alt=\"\"/>\r\n                        </a>\r\n                    </div>\r\n                             \r\n                )\r\n            }\r\n        </div>\r\n    }\r\n        <div className=\"d-flex flex-column align-items-center mt-3\">\r\n            <Link to={'/'}>Go To Home</Link>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImageList;","E:\\Projects\\Django\\invento\\image_upload_react\\src\\components\\Title.js",[],"E:\\Projects\\Django\\invento\\image_upload_react\\src\\components\\Endpoints.js",[],"E:\\Projects\\Django\\Invento-task\\src\\index.js",[],"E:\\Projects\\Django\\Invento-task\\src\\App.js",[],"E:\\Projects\\Django\\Invento-task\\src\\components\\ImageList.js",["59"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getImageListsApi } from \"../components/Endpoints\";\r\n\r\nfunction ImageList({ match }) {\r\n  const [images, setImages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch Images For The Corresponding Title\r\n  const fetchImages = () => {\r\n    fetch(`${getImageListsApi}${match.params[\"pk\"]}/`)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setImages(data);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImages();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div>Loading......</div>\r\n      ) : (\r\n        <div>\r\n          <h3 className=\"my-4 text-center\">Title {images[0].title}</h3>\r\n          {images.map((image) => (\r\n            <div\r\n              className=\"d-flex flex-column align-items-center\"\r\n              key={image.id}\r\n            >\r\n              <a href={image.image_url}>\r\n                <img\r\n                  className=\"img-fluid\"\r\n                  style={{ width: \"320px\", height: \"320px\" }}\r\n                  src={image.image_url}\r\n                  alt=\"\"\r\n                />\r\n              </a>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <div className=\"d-flex flex-column align-items-center mt-3\">\r\n        <Link to={\"/\"}>Go To Home</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImageList;\r\n","E:\\Projects\\Django\\Invento-task\\src\\components\\Home.js",["60"],"E:\\Projects\\Django\\Invento-task\\src\\components\\Endpoints.js",[],"E:\\Projects\\Django\\Invento-task\\src\\components\\Title.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":32,"column":6,"nodeType":"67","endLine":32,"endColumn":8,"suggestions":"68"},{"ruleId":"65","severity":1,"message":"66","line":22,"column":7,"nodeType":"67","endLine":22,"endColumn":9,"suggestions":"69"},{"ruleId":"65","severity":1,"message":"66","line":23,"column":6,"nodeType":"67","endLine":23,"endColumn":8,"suggestions":"70"},{"ruleId":"65","severity":1,"message":"71","line":33,"column":6,"nodeType":"67","endLine":33,"endColumn":8,"suggestions":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchImages'. Either include it or remove the dependency array.","ArrayExpression",["75"],["76"],["77"],"React Hook useEffect has a missing dependency: 'fetchTitles'. Either include it or remove the dependency array.",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"79","fix":"81"},{"desc":"79","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [fetchImages]",{"range":"85","text":"86"},{"range":"87","text":"86"},{"range":"88","text":"86"},"Update the dependencies array to be: [fetchTitles]",{"range":"89","text":"90"},[907,909],"[fetchImages]",[611,613],[637,639],[956,958],"[fetchTitles]"]